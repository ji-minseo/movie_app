{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAiCeA,MA5Bf,YAA2D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC9C,OACA,yBAAKC,UAAU,SACX,yBAAKA,UAAU,iBACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,KAGzC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBAAiBD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OACvG,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UC8BGC,G,iNAxCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKAE,IAAMC,IAAI,6DALV,gBAGCL,EAHD,EAERM,KACEA,KAAON,OAGX,EAAKO,SAAS,CAAEP,SAAQD,WAAW,IANzB,sC,mFAUVS,KAAKP,c,+BAGE,MACqBO,KAAKV,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACE,6BAASX,UAAU,aAAaU,EAC9B,yBAAKV,UAAU,UACb,0BAAMA,UAAW,gBAAjB,eAGA,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAiB,GAAK,OACb,kBAAC,EAAD,CAAOd,IAAKc,EAAM1B,GAAIA,GAAI0B,EAAM1B,GAAIC,KAAMyB,EAAMzB,KAAMC,MAAOwB,EAAMxB,MAAOC,QAASuB,EAAMvB,QAASC,OAAQsB,EAAMC,mBAAoBtB,OAAQqB,EAAMrB,kB,GA7BhJuB,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7c155fbb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n//스테이트가 없어서 클래스 말고 함수만!\nfunction Movie({id, year, title, summary, poster, genres}) {\n    return (\n    <div className=\"movie\">\n        <div className=\"movie__poster\">\n            <img src={poster} alt={title} title={title} />\n        </div>\n\n        <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"movie__genres\">{genres.map((genre, index) => <li key={index} className=\"genres__genre\">{genre}</li>)}</ul>\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n        </div>\n        \n        \n    </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {//나중에 쓸 변수 선언, 초기값 설정. 필수는 아님\n    isLoading: true,\n    movies: []\n  };//마운트 되자마자 변수 바꿔주기\n\n  getMovies = async () => {//async = 비동기 함수라고 정의 -> await  기다리길 원하는 함수\n    const {\n      data: {\n        data: {movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");//api 에서 잡아온것을 변수에 넣기!\n    this.setState({ movies, isLoading: false })//movies:movies = setstate의 무비스 : axios의 무비스\n    //console.log(movies); // movies.data.data.movies\n  }\n  componentDidMount() {//마운트 처음 되자마자 호출되는 함수(처음만) -> 여기서 api에서 데이터 받아오는 것 함 -> 데이터가 다 로딩되면 받아진 영화 정보 아래 렌더에서 렌더하게!\n    this.getMovies();\n  }\n\n  render() { //처음 렌더 업데이트시 렌더 매번 하고 ->업데이트 호출\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">{isLoading ? (\n        <div className=\"loader\">\n          <span className =\"loader__text\">Loading...</span>\n        </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie=> (\n                <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n            ))}\n          </div>\n\n        )}\n      </section>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}